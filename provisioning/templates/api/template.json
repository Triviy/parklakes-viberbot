{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_app_parklakes_viberbot_name": {
            "defaultValue": "app-parklakes-viberbot",
            "type": "String"
        },
        "components_ai_parklakes_automation_name": {
            "defaultValue": "ai-parklakes-automation",
            "type": "String"
        },
        "serverfarms_ASP_rgparklakesautomation_8fd8_name": {
            "defaultValue": "ASP-rgparklakesautomation-8fd8",
            "type": "String"
        },
        "accounts_cv_parklakes_viberbot_name": {
            "defaultValue": "cv-parklakes-viberbot",
            "type": "String"
        },
        "actionGroups_ag_me_parklakes_automation_name": {
            "defaultValue": "ag-me-parklakes-automation",
            "type": "String"
        },
        "databaseAccounts_cosmos_parklakes_viberbot_name": {
            "defaultValue": "cosmos-parklakes-viberbot",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___ai_parklakes_automation_name": {
            "defaultValue": "failure anomalies - ai-parklakes-automation",
            "type": "String"
        },
        "actiongroups_application_insights_smart_detection_externalid": {
            "defaultValue": "/subscriptions/858c34e6-91a1-4dd5-a531-ed00358ef258/resourceGroups/rg-parklakes-automation-win/providers/microsoft.insights/actiongroups/application insights smart detection",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[parameters('accounts_cv_parklakes_viberbot_name')]",
            "location": "westeurope",
            "sku": {
                "name": "F0"
            },
            "kind": "ComputerVision",
            "properties": {
                "customSubDomainName": "[parameters('accounts_cv_parklakes_viberbot_name')]",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-06-01-preview",
            "name": "[parameters('databaseAccounts_cosmos_parklakes_viberbot_name')]",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "Azure Cosmos DB for MongoDB API",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Production"
            },
            "kind": "MongoDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": true,
                "enableAnalyticalStorage": false,
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Eventual",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "apiProperties": {
                    "serverVersion": "3.6"
                },
                "locations": [
                    {
                        "locationName": "West Europe",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableMongo"
                    },
                    {
                        "name": "DisableRateLimitingResponses"
                    }
                ],
                "ipRules": [
                    {
                        "ipAddressOrRange": "178.216.10.149"
                    },
                    {
                        "ipAddressOrRange": "104.42.195.92"
                    },
                    {
                        "ipAddressOrRange": "40.76.54.131"
                    },
                    {
                        "ipAddressOrRange": "52.176.6.30"
                    },
                    {
                        "ipAddressOrRange": "52.169.50.45"
                    },
                    {
                        "ipAddressOrRange": "52.187.184.26"
                    },
                    {
                        "ipAddressOrRange": "0.0.0.0"
                    }
                ],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 1440,
                        "backupRetentionIntervalInHours": 48
                    }
                }
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_ag_me_parklakes_automation_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "ag-me-pl-a",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_ai_parklakes_automation_name')]",
            "location": "westeurope",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_rgparklakesautomation_8fd8_name')]",
            "location": "West Europe",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___ai_parklakes_automation_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ai_parklakes_automation_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_ai_parklakes_automation_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[parameters('actiongroups_application_insights_smart_detection_externalid')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/cosmosdb-parklakes-viberbot')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "cosmosdb-parklakes-viberbot"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_app_parklakes_viberbot_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgparklakesautomation_8fd8_name'))]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_parklakes_viberbot_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_parklakes_viberbot_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgparklakesautomation_8fd8_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_app_parklakes_viberbot_name'), '/web')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|triviy/parklakes-viberbot:latest",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": true,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-parklakes-viberbot",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_app_parklakes_viberbot_name'), '/', parameters('sites_app_parklakes_viberbot_name'), '.azurewebsites.net')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "siteName": "app-parklakes-viberbot",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/cosmosdb-parklakes-viberbot/parklakes-car-owners')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), 'cosmosdb-parklakes-viberbot')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "parklakes-car-owners",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            }
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/cosmosdb-parklakes-viberbot/parklakes-car-owners-props')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), 'cosmosdb-parklakes-viberbot')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "parklakes-car-owners-props",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            }
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/cosmosdb-parklakes-viberbot/parklakes-subscribers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), 'cosmosdb-parklakes-viberbot')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "parklakes-subscribers",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            }
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), '/cosmosdb-parklakes-viberbot/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'), 'cosmosdb-parklakes-viberbot')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_parklakes_viberbot_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        }
    ]
}